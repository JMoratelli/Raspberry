#!/bin/bash
#Altera DNS eth0
sudo systemctl start NetworkManager
sudo nmcli connection modify eth0 ipv4.dns "192.168.12.1,192.168.2.1"
sudo nmcli connection modify eth0 ipv4.dns-search "redemachado.local"
sudo nmcli connection up eth0
sudo systemctl restart NetworkManager

#Lê e extrai o gateway da máquina
gateway=$(ip route show default | awk '{print $3}')

#Lê o Gateway e identifica a loja
case $gateway in
    10.1.1.1)
        echo "Detectada Loja Centro"
        filial=01
        loja=01
        ;;
    192.168.11.253)
        echo "Detectada Loja Bairro"
        filial=03
        loja=02
        ;;
    192.168.5.253)
        echo "Detectada Matupá"
        filial=09
        loja=03
        ;;
     192.168.7.253)
        echo "Detectada Alta Floresta"  
        filial=53
        loja=05
        ;;
     192.168.9.253)
        echo "Detectada Primavera do Leste"
        filial=52
        loja=06
        ;;
      192.168.57.193)
        echo "Detectada impressora de Confresa"
        filial=57
        loja=07
        ;;
    *)
        echo "Valor de gateway não mapeado: $gateway"
        ;;
esac

echo "Ajustando fuso horário..."
# Ajusta Fuso horário
case $filial in
  01 | 03 | 09 | 52 | 53)
    sudo raspi-config nonint do_change_timezone America/Cuiaba
    ;;
  57)
    sudo raspi-config nonint do_change_timezone America/Sao_Paulo
    ;;
  *)
    echo "Erro: Valor inválido para a variável 'filial'."
    exit 1
    ;;
esac

#Instala o PiApps
echo "Instalando PiApps"
#wget -qO- https://raw.githubusercontent.com/Botspot/pi-apps/master/install | bash

#Atualiza configuração de audio
echo "Configurando audio"
sudo raspi-config nonint do_audio 0

#Seleciona nome de host (utilize padrão do machado)
validar_numRaspi() {
  while true; do
    read -p "Digite o número do Raspberry (3 dígitos numéricos): " numRaspi

    # Verifica se a entrada tem 3 dígitos e se é numérica
    if [[ "$numRaspi" =~ ^[0-9]{3}$ ]]; then
      break #Valida a entrada e sai do loop caso entrada válida
    else
      echo "Entrada inválida. Digite um número de 3 dígitos."
    fi
  done

  echo "Sucesso!"
}

# Chama a função para validar e obter o numRaspi
validar_numRaspi

#Grava nome do host raspberry
sudo raspi-config nonint do_hostname RPI${filial}${numRaspi}LJ${loja}
echo "Nome de Host configurado para RPI${filial}${numRaspi}LJ${loja}"

#Configura rede (acelera boot)
sudo raspi-config nonint do_boot_wait 0

#Define firefox como padrão
sudo raspi-config nonint do_browser firefox

#Desabilita screenblanking
sudo raspi-config nonint do_blanking 1

#Ativa SSH
sudo raspi-config nonint do_ssh 0

#Configurando Localização Raspiberry
sudo raspi-config nonint do_change_locale pt_BR.UTF-8

#Configura layout teclado
sudo raspi-config nonint do_configure_keyboard br

#Configura para desativar o Waylan e utilizar interface X11
sudo raspi-config nonint do_wayland W1

#atualiza a lista apt e atualiza os pacotes do raspiberry
sudo apt update && sudo apt upgrade -y

#Reservado!
#sudo nano /etc/xdg/lxsession/LXDE-pi/autostart
#@chromium-browser --test-type --kiosk --incognito --noerrdialogs --no-context-menu --no-sandbox --disable-infobars --disable-translate --disable-pinch http://192.168.12.247/pesquisa/primavera-leste.php


#Grava automaticamente as senhas do VNC de acordo com o gateway configurado.
case "$filial" in
  01)
    senhaVNC="loja1"
    ;;
  03)
    senhaVNC="loja2"
    ;;
  09)
    senhaVNC="matupa"
    ;;
  52)
    senhaVNC="pleste"
    ;;
  53)
    senhaVNC="floresta"
    ;;
  57)
    senhaVNC="confresa"
    ;;
  *)
    senhaVNC="Filial não encontrada" # Caso a filial não corresponda a nenhuma das opções
    ;;
esac

echo "Senha VNC: $senhaVNC"
echo "Passo necessário para configuração do acesso via VNC!"
echo "Insira a senha root para configuração do VNC e a repita novamente"
sudo passwd root 

#Digite a senha root para acesso ao modo root
echo "Digite a senha root que acabou de criar"
su

#Ativa o VNC
sudo raspi-config nonint do_vnc 0
#Define opções de senha e criptografia
sudo printf "Encryption=PreferOff\nAuthentication=VncAuth" > /root/.vnc/config.d/vncserver-x11

# Definir a senha do VNC para $senhaVNC e ativar login legado
sudo vncpasswd -service -legacy <<< "$senhaVNC"
echo "Senha do VNC definida e login legado ativado."

# Configurar o RealVNC para iniciar automaticamente no boot
sudo systemctl enable vncserver-x11-serviced
echo "RealVNC configurado para iniciar automaticamente."

echo "Configuração do RealVNC concluída."

echo "Script realizado por Jurandir Moratelli IG @jjmoratelli ;)"
sleep 5
sudo reboot
